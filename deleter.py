import sys
import os
from typing import Literal
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from Chrome_Session import chromeSession
from util.utilities import runtime
if __name__ == "__main__":
    session = chromeSession('hdc3', 12730876)
    list_containers: list = [
'csXTZ0Np85K',
'csXTz0NK0qi',
'csXTz0ND54W',
'csXTY0Nj8y8',
'csXTy0Kf4TS',
'csXTx0P9d4w',
'csXTx0NJ6bi',
'csXTx0H06mK',
'csXTW0Mj8Vq',
'csXTw0Jv9R6',
'csXTv0Nq3he',
'csXTV0LN8cE',
'csXTv0HW04A',
'csXTV0Hr3uS',
'csXTv0Gj4Pa',
'csXTU0MB5Ig',
'csXTu0Lu4cs',
'csXTu0Ls2ue',
'csXTt0Ni7SG',
'csXTT0Mt3wY',
'csXTs0Nz4Ry',
'csXTs0MR1Bg',
'csXTs0Kd01a',
'csXTq0PM6uw',
'csXTQ0MH9t6',
'csXTp0O3KO8',
'csXTP0NZ6us',
'csXTo0O7q9u',
'csXTO0Mq3Me',
'csXTo0IR8As',
'csXTN0Np3N6',
'csXTN0L53xQ',
'csXTn0K3j8s',
'csXTn0IW8pW',
'csXTM0Pq3wc',
'csXTm0PM8Ce',
'csXTm0PA8VS',
'csXTm0Od1Ew',
'csXTM0Nj0lU',
'csXTM0Hz0gu',
'csXTm0Hv3Os',
'csXTM0Hb9iM',
'csXTM0H9Lm0',
'csXTL0Ow42e',
'csXTL0Ms3cQ',
'csXTL0MK7pK',
'csXTl0K3oY6',
'csXTk0KP1wo',
'csXTK0Js34Y',
'csXTK0HP1wg',
'csXTJ0O6y9u',
'csXTj0Ns9z6',
'csXTJ0Nr7kW',
'csXTJ0Np3mM',
'csXTj0M90hO',
'csXTj0Lo4Pa',
'csXTJ0LH1RK',
'csXTJ0H5Ro2',
'csXTI0PS3dk',
'csXTh0P1yY0',
'csXTH0N1U60',
'csXTh0KU5Uc',
'csXTg0N6M9c',
'csXTf0Qw14u',
'csXTf0QN36I',
'csXTF0QD2Ou',
'csXTF0P8nD6',
'csXTF0N9A9A',
'csXTF0II9EY',
'csXTe0H64Fa',
'csXTd0Nl2yW',
'csXTD0M1CQ4',
'csXTD0Ia9uK',
'csXTc0O107c',
'csXTc0KV6ds',
'csXTC0JX8rK',
'csXTC0IK10u',
'csXTC0I6Ib8',
'csXTB0Ql32O',
'csXTB0Md3ks',
'csXTA0Nq1oI',
'csXTa0LL2C2',
'csXTA0KK8m4',
'csXTA0Hf4tQ',
'csXT90Je21A',
'csXT80Ql4IC',
'csXT60Jc4Tg',
'csXT50HC7tA',
'csXT40On9w0',
'csXT40My1oY',
'csXT40Jo86S',
'csXT30Mq1j6',
'csXT20L9pp8',
'csXT20H7BE8',
'csXT00Qt1jo',
'csXT00MU1Vw',
'csXT00JH3V8',
'csXRWKFXpvC',
'csXRwBxsFQf',
'csXRVKrVJZj',
'csXRVKdhPK2',
'csXRvBZ9cTY',
'csXRvBSgX1s',
'csXRvBnx9L8',
'csXRRKGtxSJ',
'csXRQKS2lXn',
'csXRnHWgxFB',
'csXRgPtQrC2',
'csXRgPSlb3K',
'csXRgPRjwtr',
'csXRgPrgbDm',
'csXRgPPnjyR',
'csXRgPNgq35',
'csXRgPL1D42',
'csXRgPJwHDR',
'csXRgPj2ppX',
'csXRgPHgtXX',
'csXRgPCgB21',
'csXRgPBzpHt',
'csXRgPBklC3',
'csXRgPb2S3K',
'csXRgP92g32',
'csXRgP6qy5r',
'csXRCC41g7p',
'csXPJKPLK94',
'csXPJJSDJS7',
'csXPJJMKSGH',
'csXPJJKWY2T',
'csXPJJKSPZ8',
'csXPJJKSLKT',
'csXPJJJ7NH4',
'csXPJHZHQLP',
'csXPJHZGV2B',
'csXPJHZDGKH',
'csXPJHZ9525',
'csXPJHZ8HV8',
'csXPJHPY56G',
'csXPJHPQX6R',
'csXPJHPPNKN',
'csXPJHN4YGG',
'csXPJHN4WSY',
'csXPJHHNQKN',
'csXPJHCMJZ6',
'csXPJH4SVC4',
'csXPJH4STD9',
'csXPJH34BB8',
'csXPJH3492R',
'csXPJGZW6RY',
'csXPJGZSZPX',
'csXPJGZSZLR',
'csXPJGZSZK5',
'csXPJGZSZHB',
'csXPJGZRRF5',
'csXPJGRGCQJ',
'csXPJGRGCPH',
'csXPJGRGCNH',
'csXPJGRGCND',
'csXPJGQ8DTH',
'csXPJGFQ4QK',
'csXPJGFPH2Y',
'csXPJGFKJ3J',
'csXPJGF9B59',
'csXPJG4BPL5',
'csXPJG4BN59',
'csXPJG47WFQ',
'csXPJG474RJ',
'csXPJG46KGK',
'csXPJFWK5Y4',
'csXPJFV9QV2',
'csXPJFV6MW6',
'csXPJFRVZ6Q',
'csXPJFGCM8Y',
'csXPJF76BH9',
'csXPJF74WXL',
'csXPJF6TPXH',
'csXPJF6SYH3',
'csXPJF6RTLF',
'csXPJF6QDJL',
'csXPJF54H2P',
'csXPJF48XPD',
'csXPJDVLDQ8',
'csXPJDV5FKV',
'csXPJDRJPP5',
'csXPJDNGTZM',
'csXPJDKFLVB',
'csXPJDCSHFQ',
'csXPJD7WKK7',
'csXPJD7722K',
'csXPJCZGRHX',
'csXPJCW3S6H',
'csXPJCMDVJZ',
'csXPJC9CNTR',
'csXPJBY3TXY',
'csXPJBS7NHQ',
'csXPJBS6RLB',
'csXPJBRZTY2',
'csXPJBP3NPX',
'csXPJBM57VY',
'csXPJBM57VM',
'csXPJBM56DD',
'csXPJBM4N4V',
'csXPJBM4L5N',
'csXPJBLX5LS',
'csXPJBG3PDN',
'csXPJBFVY82',
'csXPJBFVG2F',
'csXPJBC63BC',
'csXPJB32KTJ',
'csXPJB2ZYTH',
'csXPJB2WG8L',
'csXPHY248DC',
'csXPHVVBFD7',
'csXPHVVBDWV',
'csXPHVNP86Q',
'csXPHVG956G',
'csXPHPDXLF6',
'csXPHMGPXSS',
'csXPHLYZCK4',
'csXPHCV4MZ5',
'csXPH9HPP3X',
'csXPH6WT44G',
'csXPH6W3YCH',
'csXPH3VDSWX',
'csXPH3DJZ7S',
'csXPH25V8GH',
'csXPGRCK5VP',
'csXPGQHYPPR',
'csXOEFEK738',
'csXOeF77XpE',
'csXOe9229YW',
'csXOE3LTL4e',
'csXOCzdfQ7R',
'csXOCyQTN6T',
'csXOCwSuJ4b',
'csXOCVx3Pa0',
'csXOCRDMjPl',
'csXOCjql8pH',
'csXOCJ0jMQH',
'csXOcFXNNk5',
'csXOC9UM0v3',
'csXOC6Nec29',
'csXOc49ZKoL',
'csXOC38cA1c',
'csXOc389488',
'csXObz0e87F',
'csXOBL6cOYQ',
'csXOB37r312',
'csXOao48BZ6',
'csXOaA6Mat1',
'csXOA568LCW',
'csXOa4Xk4HW',
'csXO9z6nn1f',
'csXGzGQCaIV',
'csXGz5VEE4C',
'csXGxnqmWeT',
'csXGXcCZngr',
'csXGWduMCgD',
'csXGwazNGWP',
'csXGvVNPFGM',
'csXGvJS5Wkb',
'csXGuUSOmRb',
'csXGuTbQ0zS',
'csXGuND68ld',
'csXGTQW2hmP',
'csXGROgaG8l',
'csXGqw85sFl',
'csXGqTkzvTc',
'csXGqeuGlQr',
'csXGnQ883Wd',
'csXGMSlcsA0',
'csXGMOS7Qct',
'csXGk5XK2wU',
'csXGJ7D6N0t',
'csXGiqeDnI4',
'csXGIhNW6eG',
'csXGiCEiCJG',
'csXGIBk7aOD',
'csXGHK4o1SY',
'csXGgYHhQCY',
'csXGGu1cpmp',
'csXGGmFyTdi',
'csXGFKJVz1r',
'csXGF5JQPac',
'csXGENIpYrE',
'csXGej8H7Jr',
'csXGefAVJvb',
'csXGe528PIC',
'csXGbWQpJWl',
'csXGBdl8EAo',
'csXGahzUYf3',
'csXG8r5IASm',
'csXG8LgCrKo',
'csXG1s760W0',
'csXG0MTkq2f',
'csX9YN3HSwm',
'csX9VCh6YtJ',
'csX9QRCQ8th',
'csX9Ql9AqyY',
'csX9P2xe6zW',
'csX9P2xe6zT',
'csX9P2xe6zL',
'csX9LFJPZzb',
'csX9J8N3VxM',
'csX9H5KCHzS',
'csX9H5GF6zt',
'csX9FDLNZy3',
'csX9DBD32ym',
'csX9BRRX6zF',
'csX93rUoyzR',
'csX92dkocx3',
'csX92dkocwv'

    ]
    dict_containers: dict = {
    }

    def unbind(containers: list):
        for i, csX in enumerate(containers, start=1):
            print(f'{i}/{len(containers)}) {csX} // {runtime(session.unbindHierarchy, csX)}')
    
    def sideline(containers: list):
        for i, csX in enumerate(containers, start=1):
            print(f'{i}/{len(list_containers)}) {csX} // {runtime(session.sideline_delete, csX ,'TRASH')}')

    def moveContainer(containers: list, destination: str):
        for i, csX in enumerate(containers, start=1):
            print(f'{i}/{len(containers)}) {csX} // {runtime(session.move_container, 200 , csX, destination)}')

    def deleteItem(containers: list, mode: Literal['container', 'single']):
        for i, container in enumerate(containers, start=1):
            print(f'{i}/{len(containers)} // {container} // {runtime(session.deleteItem, container, mode)}')

    def get_consumer(containers: list):
        for i, container in enumerate(list_containers, start=1):
            print(f"{i}/{len(containers)}) // {container} // {runtime(session.get_container_consumer, container)}")

    # deleteItem('container')
    # sideline()
    # moveContainer(list_containers, 'dz-R-PICK-CLEAN-CAGE')
    get_consumer(list_containers)
    session.close()
